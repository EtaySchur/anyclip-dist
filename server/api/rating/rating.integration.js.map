{"version":3,"sources":["../../../../server/api/rating/rating.integration.js"],"names":[],"mappings":"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","file":"rating.integration.js","sourcesContent":["'use strict';\n\nvar app = require('../..');\nimport request from 'supertest';\n\nvar newRating;\n\ndescribe('Rating API:', function() {\n\n  describe('GET /api/ratings', function() {\n    var ratings;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/ratings')\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          ratings = res.body;\n          done();\n        });\n    });\n\n    it('should respond with JSON array', function() {\n      ratings.should.be.instanceOf(Array);\n    });\n\n  });\n\n  describe('POST /api/ratings', function() {\n    beforeEach(function(done) {\n      request(app)\n        .post('/api/ratings')\n        .send({\n          name: 'New Rating',\n          info: 'This is the brand new rating!!!'\n        })\n        .expect(201)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          newRating = res.body;\n          done();\n        });\n    });\n\n    it('should respond with the newly created rating', function() {\n      newRating.name.should.equal('New Rating');\n      newRating.info.should.equal('This is the brand new rating!!!');\n    });\n\n  });\n\n  describe('GET /api/ratings/:id', function() {\n    var rating;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/ratings/' + newRating._id)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          rating = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      rating = {};\n    });\n\n    it('should respond with the requested rating', function() {\n      rating.name.should.equal('New Rating');\n      rating.info.should.equal('This is the brand new rating!!!');\n    });\n\n  });\n\n  describe('PUT /api/ratings/:id', function() {\n    var updatedRating;\n\n    beforeEach(function(done) {\n      request(app)\n        .put('/api/ratings/' + newRating._id)\n        .send({\n          name: 'Updated Rating',\n          info: 'This is the updated rating!!!'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          updatedRating = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      updatedRating = {};\n    });\n\n    it('should respond with the updated rating', function() {\n      updatedRating.name.should.equal('Updated Rating');\n      updatedRating.info.should.equal('This is the updated rating!!!');\n    });\n\n  });\n\n  describe('DELETE /api/ratings/:id', function() {\n\n    it('should respond with 204 on successful removal', function(done) {\n      request(app)\n        .delete('/api/ratings/' + newRating._id)\n        .expect(204)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n    it('should respond with 404 when rating does not exist', function(done) {\n      request(app)\n        .delete('/api/ratings/' + newRating._id)\n        .expect(404)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n  });\n\n});\n"]}