{"version":3,"sources":["../../../../server/api/videos/index.spec.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,aAAa,QAAQ,YAAR,EAAsB,eAAtB,EAAb;;AAEJ,IAAI,iBAAiB;AACnB,SAAO,kBAAP;AACA,QAAM,iBAAN;AACA,UAAQ,mBAAR;AACA,UAAQ,mBAAR;AACA,WAAS,oBAAT;CALE;;AAQJ,IAAI,aAAa;AACf,OAAK,MAAM,GAAN,EAAL;AACA,OAAK,MAAM,GAAN,EAAL;AACA,SAAO,MAAM,GAAN,EAAP;AACA,QAAM,MAAM,GAAN,EAAN;AACA,UAAQ,MAAM,GAAN,EAAR;CALE;;;AASJ,IAAI,cAAc,WAAW,YAAX,EAAyB;AACzC,aAAW;AACT,YAAQ,kBAAW;AACjB,aAAO,UAAP,CADiB;KAAX;GADV;AAKA,yBAAuB,cAAvB;CANgB,CAAd;;AASJ,SAAS,oBAAT,EAA+B,YAAW;;AAExC,KAAG,0CAAH,EAA+C,YAAW;AACxD,gBAAY,MAAZ,CAAmB,KAAnB,CAAyB,UAAzB,EADwD;GAAX,CAA/C,CAFwC;;AAMxC,WAAS,kBAAT,EAA6B,YAAW;;AAEtC,OAAG,yCAAH,EAA8C,YAAW;AACvD,iBAAW,GAAX,CACG,QADH,CACY,GADZ,EACiB,kBADjB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB,CADuD;KAAX,CAA9C,CAFsC;GAAX,CAA7B,CANwC;;AAgBxC,WAAS,sBAAT,EAAiC,YAAW;;AAE1C,OAAG,wCAAH,EAA6C,YAAW;AACtD,iBAAW,GAAX,CACG,QADH,CACY,MADZ,EACoB,iBADpB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB,CADsD;KAAX,CAA7C,CAF0C;GAAX,CAAjC,CAhBwC;;AA0BxC,WAAS,mBAAT,EAA8B,YAAW;;AAEvC,OAAG,0CAAH,EAA+C,YAAW;AACxD,iBAAW,IAAX,CACG,QADH,CACY,GADZ,EACiB,mBADjB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB,CADwD;KAAX,CAA/C,CAFuC;GAAX,CAA9B,CA1BwC;;AAoCxC,WAAS,sBAAT,EAAiC,YAAW;;AAE1C,OAAG,0CAAH,EAA+C,YAAW;AACxD,iBAAW,GAAX,CACG,QADH,CACY,MADZ,EACoB,mBADpB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB,CADwD;KAAX,CAA/C,CAF0C;GAAX,CAAjC,CApCwC;;AA8CxC,WAAS,wBAAT,EAAmC,YAAW;;AAE5C,OAAG,0CAAH,EAA+C,YAAW;AACxD,iBAAW,KAAX,CACG,QADH,CACY,MADZ,EACoB,mBADpB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB,CADwD;KAAX,CAA/C,CAF4C;GAAX,CAAnC,CA9CwC;;AAwDxC,WAAS,yBAAT,EAAoC,YAAW;;AAE7C,OAAG,2CAAH,EAAgD,YAAW;AACzD,iBAAW,MAAX,CACG,QADH,CACY,MADZ,EACoB,oBADpB,EAEG,MAFH,CAEU,IAFV,CAEe,IAFf,CAEoB,UAFpB,CADyD;KAAX,CAAhD,CAF6C;GAAX,CAApC,CAxDwC;CAAX,CAA/B","file":"index.spec.js","sourcesContent":["'use strict';\n\nvar proxyquire = require('proxyquire').noPreserveCache();\n\nvar videosCtrlStub = {\n  index: 'videosCtrl.index',\n  show: 'videosCtrl.show',\n  create: 'videosCtrl.create',\n  update: 'videosCtrl.update',\n  destroy: 'videosCtrl.destroy'\n};\n\nvar routerStub = {\n  get: sinon.spy(),\n  put: sinon.spy(),\n  patch: sinon.spy(),\n  post: sinon.spy(),\n  delete: sinon.spy()\n};\n\n// require the index with our stubbed out modules\nvar videosIndex = proxyquire('./index.js', {\n  'express': {\n    Router: function() {\n      return routerStub;\n    }\n  },\n  './videos.controller': videosCtrlStub\n});\n\ndescribe('Videos API Router:', function() {\n\n  it('should return an express router instance', function() {\n    videosIndex.should.equal(routerStub);\n  });\n\n  describe('GET /api/videoss', function() {\n\n    it('should route to videos.controller.index', function() {\n      routerStub.get\n        .withArgs('/', 'videosCtrl.index')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('GET /api/videoss/:id', function() {\n\n    it('should route to videos.controller.show', function() {\n      routerStub.get\n        .withArgs('/:id', 'videosCtrl.show')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('POST /api/videoss', function() {\n\n    it('should route to videos.controller.create', function() {\n      routerStub.post\n        .withArgs('/', 'videosCtrl.create')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('PUT /api/videoss/:id', function() {\n\n    it('should route to videos.controller.update', function() {\n      routerStub.put\n        .withArgs('/:id', 'videosCtrl.update')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('PATCH /api/videoss/:id', function() {\n\n    it('should route to videos.controller.update', function() {\n      routerStub.patch\n        .withArgs('/:id', 'videosCtrl.update')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n  describe('DELETE /api/videoss/:id', function() {\n\n    it('should route to videos.controller.destroy', function() {\n      routerStub.delete\n        .withArgs('/:id', 'videosCtrl.destroy')\n        .should.have.been.calledOnce;\n    });\n\n  });\n\n});\n"]}